#!/usr/bin/env python3

import sys
import threading

def factorize(n):
    factors = []
    i = 2
    while i * i <= n:
        if n % i:
            i += 1
        else:
            n //= i
            factors.append(i)
    if n > 1:
        factors.append(n)
    return factors

def factorize_numbers(numbers):
    for n in numbers:
        factorization = factorize(n)
        print(f"{n}={'*'.join(map(str, factorization))}")

def main(filename):
    with open(filename, 'r') as file:
        numbers = [int(line.strip()) for line in file]
    
    # Split numbers into chunks for parallel processing
    chunk_size = len(numbers) // 4
    chunks = [numbers[i:i+chunk_size] for i in range(0, len(numbers), chunk_size)]
    
    threads = []
    for chunk in chunks:
        thread = threading.Thread(target=factorize_numbers, args=(chunk,))
        thread.start()
        threads.append(thread)
    
    for thread in threads:
        thread.join()

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: factors <file>")
        print("where <file> is a file containing natural numbers to factor.")
        sys.exit(1)
    filename = sys.argv[1]
    main(filename)

